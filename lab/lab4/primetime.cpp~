//Shaikat Islam and Nora Li
//10-10-17
//Lab 4 (FUNctions)
//CS11

#include <iostream>
using namespace std;
//prototypes
int prime_factor(int x);
bool not_prime(int x);



//void prime_factor(int x)
//Purpose:
//Parameters:
//Returns:
int prime_factor(int x){
  //check for prime factors
  for(int i = 2; i < x; i++)
  {
    //if the number is not prime:
    if(x % i == 0)
      {
	return i;
      }//end if
    //prime
    else
      {
	return x;
      }//end else
  }//end for
}//end prime_factor

//bool not_prime(int x)
//Purpose:
//Parameters:
//Returns:
bool not_prime(int x){
  //check for prime factors
  for(int i = 2; i < x; i++)
  {
    //if the number is not prime:
    if(x % i == 0)
      {
	return true;
      }//end if
    //prime
    else
      {
	return false;
      }//end else
  }//end for
}//end not_prime



//int main()
//Purpose:
//Parameters:
//Returns:
int main()
{
  char choice = 'Y';
  int input;
  //Explain what the prime factorization of a number is
  cout << "Hello friends. Welcome to the the Prime Time Club," 
       << " where you're always at your prime.\nThe prime factorization"
       << " of a number the set of numbers, that when multiplied together,"
       << " equal that number.\n" << endl;

  //validate input
  do
    {
      cout << "Please enter the number you would like to factorize: ";
      cin >> input;
      //do while loop to check if input is still prime
      do
	{
	  cout << prime_factor(input) << " ";
	  input /= prime_factor(input);
	}
      while(not_prime(input));

      cout << "Would you like to keep factorizing (Y/N)?\n";
      cin >> choice;
    }
  while(choice == 'Y' || choice == 'y');


  //return statement
  return 0;
}//end main
